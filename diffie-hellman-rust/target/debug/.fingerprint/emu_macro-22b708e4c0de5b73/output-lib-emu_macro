{"message":"failed to resolve: could not find `__rt` in `quote`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":6313,"byte_end":6317,"line_start":123,"line_end":123,"column_start":72,"column_end":76,"is_primary":true,"text":[{"text":"                            .is_ident(&Ident::new(\"load\", quote::__rt::Span::call_site()))","highlight_start":72,"highlight_end":76}],"label":"not found in `quote::__rt`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::__private::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use proc_macro2::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use proc_macro::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use proc_macro::bridge::server::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use quote::__private::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use syn::__private::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `Span`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":6300,"byte_end":6313,"line_start":123,"line_end":123,"column_start":59,"column_end":72,"is_primary":true,"text":[{"text":"                            .is_ident(&Ident::new(\"load\", quote::__rt::Span::call_site()))","highlight_start":59,"highlight_end":72}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `__rt` in `quote`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs:123:72\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   .is_ident(&Ident::new(\"load\", quote::__rt::Span::call_site()))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `quote::__rt`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse crate::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse crate::__private::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse proc_macro2::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse proc_macro::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m      and 3 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `Span`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                            .is_ident(&Ident::new(\"load\", \u001b[0m\u001b[0m\u001b[38;5;9mquote::__rt::\u001b[0m\u001b[0mSpan::call_site()))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                            .is_ident(&Ident::new(\"load\", Span::call_site()))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"message":"failed to resolve: could not find `__rt` in `quote`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":9144,"byte_end":9148,"line_start":169,"line_end":169,"column_start":72,"column_end":76,"is_primary":true,"text":[{"text":"                            .is_ident(&Ident::new(\"read\", quote::__rt::Span::call_site()))","highlight_start":72,"highlight_end":76}],"label":"not found in `quote::__rt`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::__private::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use proc_macro2::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use proc_macro::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use proc_macro::bridge::server::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use quote::__private::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use syn::__private::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `Span`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":9131,"byte_end":9144,"line_start":169,"line_end":169,"column_start":59,"column_end":72,"is_primary":true,"text":[{"text":"                            .is_ident(&Ident::new(\"read\", quote::__rt::Span::call_site()))","highlight_start":59,"highlight_end":72}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `__rt` in `quote`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs:169:72\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   .is_ident(&Ident::new(\"read\", quote::__rt::Span::call_site()))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `quote::__rt`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse crate::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse crate::__private::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse proc_macro2::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse proc_macro::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m      and 3 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `Span`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                            .is_ident(&Ident::new(\"read\", \u001b[0m\u001b[0m\u001b[38;5;9mquote::__rt::\u001b[0m\u001b[0mSpan::call_site()))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                            .is_ident(&Ident::new(\"read\", Span::call_site()))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"message":"failed to resolve: could not find `__rt` in `quote`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":10413,"byte_end":10417,"line_start":193,"line_end":193,"column_start":74,"column_end":78,"is_primary":true,"text":[{"text":"                            .is_ident(&Ident::new(\"launch\", quote::__rt::Span::call_site()))","highlight_start":74,"highlight_end":78}],"label":"not found in `quote::__rt`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::__private::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use proc_macro2::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use proc_macro::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use proc_macro::bridge::server::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use quote::__private::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use syn::__private::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `Span`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":10400,"byte_end":10413,"line_start":193,"line_end":193,"column_start":61,"column_end":74,"is_primary":true,"text":[{"text":"                            .is_ident(&Ident::new(\"launch\", quote::__rt::Span::call_site()))","highlight_start":61,"highlight_end":74}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `__rt` in `quote`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs:193:74\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   .is_ident(&Ident::new(\"launch\", quote::__rt::Span::call_site()))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `quote::__rt`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse crate::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse crate::__private::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse proc_macro2::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse proc_macro::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m      and 3 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `Span`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                            .is_ident(&Ident::new(\"launch\", \u001b[0m\u001b[0m\u001b[38;5;9mquote::__rt::\u001b[0m\u001b[0mSpan::call_site()))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                            .is_ident(&Ident::new(\"launch\", Span::call_site()))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"message":"failed to resolve: could not find `__rt` in `quote`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":13700,"byte_end":13704,"line_start":259,"line_end":259,"column_start":70,"column_end":74,"is_primary":true,"text":[{"text":"                    let ident = Ident::new(&param.name, quote::__rt::Span::call_site());","highlight_start":70,"highlight_end":74}],"label":"not found in `quote::__rt`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::__private::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use proc_macro2::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use proc_macro::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use proc_macro::bridge::server::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use quote::__private::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":45,"byte_end":45,"line_start":3,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use quote::ToTokens;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use syn::__private::Span;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"if you import `Span`, refer to it directly","code":null,"level":"help","spans":[{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs","byte_start":13687,"byte_end":13700,"line_start":259,"line_end":259,"column_start":57,"column_end":70,"is_primary":true,"text":[{"text":"                    let ident = Ident::new(&param.name, quote::__rt::Span::call_site());","highlight_start":57,"highlight_end":70}],"label":null,"suggested_replacement":"","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `__rt` in `quote`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\accelerating.rs:259:70\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let ident = Ident::new(&param.name, quote::__rt::Span::call_site());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `quote::__rt`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse crate::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse crate::__private::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse proc_macro2::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[38;5;10muse proc_macro::Span;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m      and 3 other candidates\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you import `Span`, refer to it directly\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                    let ident = Ident::new(&param.name, \u001b[0m\u001b[0m\u001b[38;5;9mquote::__rt::\u001b[0m\u001b[0mSpan::call_site());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                    let ident = Ident::new(&param.name, Span::call_site());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"message":"the trait bound `syn::Expr: From<TokenStream2>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\passing.rs","byte_start":14397,"byte_end":14409,"line_start":337,"line_end":337,"column_start":37,"column_end":49,"is_primary":true,"text":[{"text":"                    let gpu_ident = quote! {gpu}.into();","highlight_start":37,"highlight_end":49}],"label":"the trait `From<TokenStream2>` is not implemented for `syn::Expr`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.26\\src\\lib.rs","byte_start":14568,"byte_end":14570,"line_start":490,"line_end":490,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        _s","highlight_start":9,"highlight_end":11}],"label":"this tail expression is of type `syn::__private::TokenStream2`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\passing.rs","byte_start":14397,"byte_end":14409,"line_start":337,"line_end":337,"column_start":37,"column_end":49,"is_primary":false,"text":[{"text":"                    let gpu_ident = quote! {gpu}.into();","highlight_start":37,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quote!","def_site_span":{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.26\\src\\lib.rs","byte_start":14298,"byte_end":14316,"line_start":481,"line_end":481,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\passing.rs","byte_start":14410,"byte_end":14414,"line_start":337,"line_end":337,"column_start":50,"column_end":54,"is_primary":false,"text":[{"text":"                    let gpu_ident = quote! {gpu}.into();","highlight_start":50,"highlight_end":54}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <syn::Expr as From<ExprArray>>\n  <syn::Expr as From<ExprAssign>>\n  <syn::Expr as From<ExprAssignOp>>\n  <syn::Expr as From<ExprAsync>>\n  <syn::Expr as From<ExprAwait>>\n  <syn::Expr as From<ExprBinary>>\n  <syn::Expr as From<ExprBlock>>\n  <syn::Expr as From<ExprBox>>\nand 31 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `TokenStream2` to implement `Into<syn::Expr>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `syn::Expr: From<TokenStream2>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\Diego Andrade\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\emu_macro-0.1.0\\src\\passing.rs:337:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let gpu_ident = quote! {gpu}.into();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<TokenStream2>` is not implemented for `syn::Expr`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthis tail expression is of type `syn::__private::TokenStream2`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <syn::Expr as From<ExprArray>>\u001b[0m\n\u001b[0m              <syn::Expr as From<ExprAssign>>\u001b[0m\n\u001b[0m              <syn::Expr as From<ExprAssignOp>>\u001b[0m\n\u001b[0m              <syn::Expr as From<ExprAsync>>\u001b[0m\n\u001b[0m              <syn::Expr as From<ExprAwait>>\u001b[0m\n\u001b[0m              <syn::Expr as From<ExprBinary>>\u001b[0m\n\u001b[0m              <syn::Expr as From<ExprBlock>>\u001b[0m\n\u001b[0m              <syn::Expr as From<ExprBox>>\u001b[0m\n\u001b[0m            and 31 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `TokenStream2` to implement `Into<syn::Expr>`\u001b[0m\n\n"}
{"message":"aborting due to 5 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 5 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0277, E0433.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0277, E0433.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
